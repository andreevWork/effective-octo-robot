
==================== FINAL INTERFACE ====================
2017-10-30 12:05:29.796886 UTC

interface effective-octo-robot-0.1.0.0-KcrcswkT73U2JfS8YKFcKm:Stepic.Lists 8002
  interface hash: 4f18b58a5e104a7e2dbc7fcb05036bb0
  ABI hash: 253821d7fe3d923f509939748f87bc3b
  export-list hash: a34af5d230e29d69867d43d11873d070
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 94d7fd83d9b38813b75cb1fbe099a333
  sig of: Nothing
  used TH splices: False
  where
exports:
  Stepic.Lists.groupElems
  Stepic.Lists.isPalindrome
  Stepic.Lists.sum3
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
b2b6ca7a2804e71603418a65348b43db
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Stepic.Lists.$trModule2
                   Stepic.Lists.$trModule1) -}
ac00a480eba88953928853b960a14b76
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Stepic.Lists"#) -}
421d8a75a6285edc3c08db23e4b26d1c
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "effective-octo-robot-0.1.0.0-KcrcswkT73U2JfS8YKFcKm"#) -}
d3c675afd42d4892ee2b6b0c325eb8df
  groupElems :: GHC.Classes.Eq a => [a] -> [[a]]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)><S,1*U> -}
704739cfb64294f158db7c7f0f04ec22
  isPalindrome :: GHC.Classes.Eq a => [a] -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U(C(C1(U)),A)><S,1*U> -}
e97fa8f61aba35a748cdda92eedd8e17
  sum1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
905263cfe13d8fb272a18dfd21cd9a24
  sum3 :: GHC.Num.Num a => [a] -> [a] -> [a] -> [a]
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,U(1*C(C1(U)),A,A,A,A,A,1*C1(U))><L,U><L,U><L,U>,
     Unfolding: (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (a1 :: [a])
                   (b :: [a])
                   (c :: [a]) ->
                 GHC.Base.map
                   @ [a]
                   @ a
                   (GHC.List.foldl
                      @ a
                      @ a
                      (GHC.Num.+ @ a $dNum)
                      (GHC.Num.fromInteger @ a $dNum Stepic.Lists.sum1))
                   (Data.OldList.transpose_$stranspose
                      @ a
                      a1
                      (GHC.Types.:
                         @ [a]
                         b
                         (GHC.Types.: @ [a] c (GHC.Types.[] @ [a]))))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

